name: Build artifacts

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: build
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up cache for container image layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build artifacts
        run: |
          sudo apt-get update && \
          sudo apt-get install -y zlib1g-dev libelf-dev llvm && \
          make -j$(nproc)
      - name: Push container images
        run: |
          (echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ vars.DOCKER_USERNAME }}" --password-stdin) && \
          docker tag network-tracing:latest "${{ vars.DOCKER_USERNAME }}/network-tracing:latest" && \
          docker push "${{ vars.DOCKER_USERNAME }}/network-tracing:latest"
      - name: Remove previous artifacts
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_ACTOR_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const { data: { artifacts }} = await github.rest.actions.listArtifactsForRepo({
              owner,
              repo,
            });
            removedCount = artifacts
              .filter(({ name }) => name === 'network-tracing-artifacts')
              .map(({ id }) => {
                console.log(`Removing artifact ${id}`);
                github.rest.actions.deleteArtifact({
                  owner,
                  repo,
                  artifact_id: id,
                });
              })
              .map(() => 1)
              .reduce((acc, cur) => acc + cur, 0);
            console.log(`Removed ${removedCount} artifacts`);
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: network-tracing-artifacts
          path: dist/
